<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

<!-- http://docs.spring.io/spring-security/site/docs/4.0.3.RELEASE/reference/htmlsingle/#user-schema -->
	<global-method-security pre-post-annotations="disabled"><!--
		<expression-handler ref="expressionHandler"/> -->
	</global-method-security>

	<http pattern="/**/*.ico" security="none"/>
	<http pattern="/**/*.jpg" security="none"/>
	<http pattern="/**/*.png" security="none"/>
	<http pattern="/**/*.gif" security="none"/>
	<http pattern="/**/*.svg" security="none"/>
	<http pattern="/**/*.ttf" security="none"/>
	<http pattern="/**/*.css" security="none"/>
	<http pattern="/**/*.js" security="none"/>
	<!-- use-expressions: WebSecurityExpressionRoot -->
	<http>
		<intercept-url pattern="/"				access="permitAll()"/>
		<intercept-url pattern="/timeout"		access="permitAll()"/>
		<intercept-url pattern="/default.html"	access="permitAll()"/>
		<intercept-url pattern="/login*"		access="permitAll()"/>

		<intercept-url pattern="/hello.html"	access="isAnonymous()"/>
		<!--
		<intercept-url pattern="/j_spring_security_check" access="isAnonymous()"/>
		<intercept-url pattern="/switchuser.jsp" access="ROLE_SUPERVISOR"/>
		<intercept-url pattern="/j_spring_security_switch_user" access="ROLE_SUPERVISOR"/> -->

		<intercept-url pattern="/**"			access="isAuthenticated()"/>

		<!--  authentication-failure-url="/login?error=1" -->
		<form-login login-page="/login?from" login-processing-url="/auth" authentication-failure-handler-ref="customFailureHandler" username-parameter="u" password-parameter="p"/>
		<http-basic/>
		<!-- invalidate-session="true" show invalid-session-url -->
		<logout invalidate-session="false" logout-success-url="/login?from=logout" logout-url="/logout" />
		<remember-me remember-me-parameter="r" />
		<csrf disabled="true"/>
		<!--
		<custom-filter ref="switchUserProcessingFilter" position="SWITCH_USER_FILTER"/> -->
		<session-management invalid-session-url="/timeout" session-fixation-protection="none">
			<concurrency-control max-sessions="1" expired-url="/login?error=6" error-if-maximum-exceeded="true"/>
		</session-management>
	</http>
	
	<!-- 
	http://stackoverflow.com/questions/1373407/how-to-display-custom-error-message-in-jsp-for-spring-security-auth-exception
	http://stackoverflow.com/questions/26484440/how-to-customize-spring-security-last-exception-message-according-to-the-error-i
	max-sessions="1" org.springframework.security.web.authentication.session.SessionAuthenticationException
	用org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler这个失败处理，SPRING_SECURITY_LAST_EXCEPTION不会被设置在session内。
	因为想要取得失败处理时页面显示的用户名，所以用自定义的失败处理。
	 -->
	<beans:bean id="customFailureHandler" class="info.yinhua.core.context.security.FailureHandler">
	    <beans:property name="defaultFailureUrl" value="/login?error=1" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userManager">
			<!-- TODO -->
			<password-encoder hash="plaintext"/>
		</authentication-provider>
	</authentication-manager>

	<!-- break at JdbcDaoImpl.loadUserByUsername -->
	<beans:bean id="userManager" class="org.springframework.security.provisioning.JdbcUserDetailsManager">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="enableAuthorities" value="true" />
		<beans:property name="enableGroups" value="false" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

	<!-- Automatically receives AuthenticationEvent messages -->
	<beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>

	<!-- Filter used to switch the user context. Note: the switch and exit url must be secured
		based on the role granted the ability to 'switch' to another user -->
	<!-- In this example 'rod' has ROLE_SUPERVISOR that can switch to regular ROLE_USER(s)
	<beans:bean id="switchUserProcessingFilter" class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter" autowire="byType">
		<b:property name="targetUrl" value="/secure/index.htm"/>
	</beans:bean> -->
<!--
	<beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<b:property name="permissionEvaluator" ref="permissionEvaluator"/>
	</beans:bean>

	<beans:bean id="permissionEvaluator" class="org.springframework.security.acls.AclPermissionEvaluator">
		<b:constructor-arg ref="aclService"/>
	</beans:bean> -->
</beans:beans>
