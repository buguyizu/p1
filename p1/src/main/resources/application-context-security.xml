<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">

<!-- http://docs.spring.io/spring-security/site/docs/4.0.3.RELEASE/reference/htmlsingle/#user-schema -->
<!-- https://vincentmi.gitbooks.io/spring-security-reference-zh/content/4.3_advanced_web_features.html -->
<!-- http://www.tianshouzhi.com/api/tutorials/spring_security_4/250 -->
<!-- http://haohaoxuexi.iteye.com/category/182468 -->

<!-- 在方法上加@PreAuthorize("hasRole('USER')")可以起作用，但是AutoWired会失效，原因不知，搜索不到。 -->
	<global-method-security secured-annotations="enabled" pre-post-annotations="enabled">
	   <!-- <expression-handler ref="expressionHandler"/> -->
	   <!-- <protect-pointcut expression="execution(* com.mycompany.*Service.*(..))" access="ROLE_USER"/> -->
	</global-method-security>

	<http pattern="/**/*.ico" security="none"/>
	<http pattern="/**/*.jpg" security="none"/>
	<http pattern="/**/*.png" security="none"/>
	<http pattern="/**/*.gif" security="none"/>
	<http pattern="/**/*.svg" security="none"/>
	<http pattern="/**/*.ttf" security="none"/>
    <http pattern="/**/*.woff" security="none"/>
    <http pattern="/**/*.woff2" security="none"/>
	<http pattern="/**/*.css" security="none"/>
	<http pattern="/**/*.js" security="none"/>
    <http pattern="/fw/**/*.*" security="none"/>

	<!-- use-expressions: WebSecurityExpressionRoot
	access-decision-manager-ref="accessDecisionManager"
	 -->
	<http>
		<intercept-url pattern="/"				access="permitAll()"/>
		<intercept-url pattern="/struts*"		access="permitAll()"/>
		<intercept-url pattern="/error"			access="permitAll()"/>
		<intercept-url pattern="/default.html"	access="permitAll()"/>
		<intercept-url pattern="/login*"		access="permitAll()"/>
		<intercept-url pattern="/join"			access="isAnonymous()"/>
		<intercept-url pattern="/hello.html"	access="isAnonymous()"/>
		<!--
		<intercept-url pattern="/j_spring_security_check" access="isAnonymous()"/>
		<intercept-url pattern="/switchuser.jsp" access="ROLE_SUPERVISOR"/>
		<intercept-url pattern="/j_spring_security_switch_user" access="ROLE_SUPERVISOR"/> -->

		<intercept-url pattern="/**"			access="isAuthenticated()"/>
		<access-denied-handler error-page="/error?source=access-denied"/>

		<!--  always-use-default-target为真时, 跳转default-target-url(默认为/), 否则调用SavedRequestAwareAuthenticationSuccessHandler取savedRequest中的url. -->
		<form-login always-use-default-target='false' login-page="/login?source" login-processing-url="/auth"
		  authentication-failure-handler-ref="customFailureHandler" username-parameter="u" password-parameter="p"/>
		<http-basic/>

		<!-- if invalidate-session="true", then show invalid-session-url -->
		<logout invalidate-session="true" logout-success-url="/login?source=logout" logout-url="/logout" />
		<remember-me remember-me-parameter="r" />
		<csrf disabled="true"/>
		<!--
		<custom-filter ref="switchUserProcessingFilter" position="SWITCH_USER_FILTER"/> -->
		<session-management invalid-session-url="/login?source=else&amp;error=5" session-fixation-protection="none">
			<concurrency-control max-sessions="2" expired-url="/login?error=4" error-if-maximum-exceeded="true" session-registry-alias="sessionRegistry" />
		</session-management>
	</http>
	
	<!-- 
	http://stackoverflow.com/questions/1373407/how-to-display-custom-error-message-in-jsp-for-spring-security-auth-exception
	http://stackoverflow.com/questions/26484440/how-to-customize-spring-security-last-exception-message-according-to-the-error-i
	max-sessions="1" org.springframework.security.web.authentication.session.SessionAuthenticationException
	用org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler这个失败处理，SPRING_SECURITY_LAST_EXCEPTION不会被设置在session内。
	因为想要取得失败处理时页面显示的用户名，所以用自定义的失败处理。
	 -->
	<beans:bean id="customFailureHandler" class="info.yinhua.core.context.security.FailureHandler">
	    <beans:property name="defaultFailureUrl" value="/login?error=1" />
	    <beans:property name="useForward" value="false" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userManager">
			<!-- TODO -->
			<password-encoder hash="plaintext"/>
		</authentication-provider>
	</authentication-manager>

	<!-- break at JdbcDaoImpl.loadUserByUsername -->
	<beans:bean id="userManager" class="info.yinhua.core.context.security.UserManager">
		<beans:property name="enableAuthorities" value="true" />
		<beans:property name="enableGroups" value="false" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

	<!-- Automatically receives AuthenticationEvent messages -->
	<beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>
	
	
	<beans:bean id="runAsManager"
	    class="org.springframework.security.access.intercept.RunAsManagerImpl">
	   <beans:property name="key" value="my_run_as_password"/>
	</beans:bean>

	<beans:bean id="runAsAuthenticationProvider"
	    class="org.springframework.security.access.intercept.RunAsImplAuthenticationProvider">
	<beans:property name="key" value="my_run_as_password"/>
	</beans:bean>
	
	<!--
	http://docs.spring.io/spring-security/site/docs/4.0.3.RELEASE/reference/htmlsingle/#authz-hierarchical-roles
	http://haohaoxuexi.iteye.com/blog/2247057
	角色继承
	 -->
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg name="decisionVoters">
			<beans:list>
				<beans:ref bean="roleVoter"/>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<beans:constructor-arg ref="roleHierarchy" />
	</beans:bean>
	<beans:bean id="roleHierarchy"
			class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_STAFF
				ROLE_STAFF > ROLE_USER
				ROLE_USER > ROLE_GUEST
			</beans:value>
		</beans:property>
	</beans:bean>
	

	<!-- Filter used to switch the user context. Note: the switch and exit url must be secured
		based on the role granted the ability to 'switch' to another user -->
	<!-- In this example 'rod' has ROLE_SUPERVISOR that can switch to regular ROLE_USER(s)
	<beans:bean id="switchUserProcessingFilter" class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter" autowire="byType">
		<b:property name="targetUrl" value="/secure/index.htm"/>
	</beans:bean> -->
<!--
	<beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<b:property name="permissionEvaluator" ref="permissionEvaluator"/>
	</beans:bean>

	<beans:bean id="permissionEvaluator" class="org.springframework.security.acls.AclPermissionEvaluator">
		<b:constructor-arg ref="aclService"/>
	</beans:bean> -->
</beans:beans>
